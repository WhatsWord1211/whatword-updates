rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow users to read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow users to read other users for search functionality
      allow read: if request.auth != null;
      
      // Allow users to update other users for friend operations
      // This is more permissive but necessary for friend system to work
      allow update: if request.auth != null;
    }
    
    // Allow authenticated users to read and write challenges
    match /challenges/{challengeId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow authenticated users to read and write games
    match /games/{gameId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow authenticated users to read and write game statistics
    match /gameStats/{gameStatId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow authenticated users to read and write friend requests
    match /friendRequests/{requestId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow authenticated users to read and write notifications
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow authenticated users to read and write leaderboard data
    match /leaderboard/{scoreId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null && 
        (scoreId.matches('score_.*') && 
         request.resource.data.userId == request.auth.uid);
      allow delete: if request.auth != null && 
        (scoreId.matches('score_.*') && 
         resource.data.userId == request.auth.uid);
    }
  }
}
